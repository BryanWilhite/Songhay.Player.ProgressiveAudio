{"version":3,"file":"progressive-audio-utility.js","sourceRoot":"","sources":["../progressive-audio-utility.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,eAAe,EAAC,MAAM,SAAS,CAAC;AAExC,MAAM,OAAO,uBAAuB;IAChC,MAAM,CAAC,mBAAmB;QACtB,OAAO,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,+BAA+B,CAAC,CAAC;IAC1E,CAAC;IAID,MAAM,CAAO,uBAAuB,CAAC,QAA6B,EAAE,KAA8B;;;YAC9F,IAAI;gBACA,MAAM,QAAQ,CAAC,iBAAiB,CAC5B,cAAc,EACd;oBACI,eAAe,EAAE,MAAA,uBAAuB,CAAC,aAAa,0CAAE,mBAAmB,EAAE;oBAC7E,aAAa,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ;oBAC9B,eAAe,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU;oBAClC,aAAa,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM;iBAC/B,CACJ,CAAC;aACL;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;gBACvB,eAAe,CAAC,eAAe,EAAE,CAAC;aACrC;;KACJ;IAED,MAAM,CAAC,kBAAkB,CAAC,QAA6B;QAEnD,uBAAuB,CAAC,aAAa,GAAG,eAAe,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAM,CAAC,EAAC,EAAE;YAErF,MAAM,KAAK,GAA4B,uBAAuB,CAAC,mBAAmB,EAAE,CAAC;YAErF,IAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,KAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,IAAG,CAAC,EAAE;gBAAE,MAAM,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,EAAE,CAAA,CAAC;aAAE;YAEnE,MAAM,uBAAuB,CAAC,uBAAuB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC3E,CAAC,CAAA,CAAC,CAAC;QAEH,eAAe,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;IAED,MAAM,CAAO,sBAAsB,CAAC,QAA6B;;;YAE7D,MAAM,KAAK,GAA4B,uBAAuB,CAAC,mBAAmB,EAAE,CAAC;YAErF,IAAG,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,GAAG,CAAC,EAAE;gBAAE,KAAK,CAAC,KAAK,EAAE,CAAC;aAAE;YAErE,MAAM,uBAAuB,CAAC,uBAAuB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEvE,eAAe,CAAC,eAAe,CAAC,MAAA,MAAA,uBAAuB,CAAC,aAAa,0CAAE,EAAE,mCAAI,SAAS,CAAC,CAAC;;KAC3F;;AA1CM,qCAAa,GAA2B,IAAI,CAAC","sourcesContent":["import {WindowAnimation} from 'songhay';\n\nexport class ProgressiveAudioUtility {\n    static getHTMLAudioElement(): HTMLAudioElement | null {\n        return window.document.querySelector('#audio-player-container>audio');\n    }\n\n    static playAnimation: WindowAnimation | null = null;\n\n    static async invokeDotNetMethodAsync(instance: DotNet.DotNetObject, audio: HTMLAudioElement | null) : Promise<void> {\n        try {\n            await instance.invokeMethodAsync(\n                'animateAsync',\n                {\n                    animationStatus: ProgressiveAudioUtility.playAnimation?.getDiagnosticStatus(),\n                    audioDuration: audio?.duration,\n                    audioReadyState: audio?.readyState,\n                    isAudioPaused: audio?.paused\n                }\n            );\n        } catch (error) {\n            console.error({error});\n            WindowAnimation.cancelAnimation();\n        }\n    }\n\n    static startPlayAnimation(instance: DotNet.DotNetObject) : void {\n\n        ProgressiveAudioUtility.playAnimation = WindowAnimation.registerAndGenerate(1, async _ => {\n\n            const audio: HTMLAudioElement | null = ProgressiveAudioUtility.getHTMLAudioElement();\n\n            if(audio?.paused && audio?.readyState > 0) { await audio?.play(); }\n\n            await ProgressiveAudioUtility.invokeDotNetMethodAsync(instance, audio);\n        });\n\n        WindowAnimation.animate();\n    }\n\n    static async stopPlayAnimationAsync(instance: DotNet.DotNetObject): Promise<void>\n    {\n        const audio: HTMLAudioElement | null = ProgressiveAudioUtility.getHTMLAudioElement();\n\n        if(audio && !audio.paused && audio.readyState > 0) { audio.pause(); }\n\n        await ProgressiveAudioUtility.invokeDotNetMethodAsync(instance, audio);\n\n        WindowAnimation.cancelAnimation(ProgressiveAudioUtility.playAnimation?.id ?? undefined);\n    }\n}\n"]}