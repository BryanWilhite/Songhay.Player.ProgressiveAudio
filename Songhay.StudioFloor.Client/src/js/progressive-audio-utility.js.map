{"version":3,"file":"progressive-audio-utility.js","sourceRoot":"","sources":["../progressive-audio-utility.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,SAAS,CAAC;AAE1C,MAAM,OAAO,uBAAuB;IAGhC,MAAM,CAAC,mBAAmB;QACtB,OAAO,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,+BAA+B,CAAC,CAAC;IAC1E,CAAC;IAED,MAAM,CAAC,yBAAyB;QAC5B,OAAO,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,wBAAwB;QAC3B,OAAO,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACpE,CAAC;IAID,qCAAqC;IACrC,MAAM,CAAO,8BAA8B,CAAC,QAA6B;;YACrE,MAAM,MAAM,GAA6B,uBAAuB,CAAC,yBAAyB,EAAE,CAAC;YAC7F,MAAM,KAAK,GAA4B,uBAAuB,CAAC,mBAAmB,EAAE,CAAC;YAErF,IAAG,MAAM,EAAE;gBAAE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;aAAE;YAEtC,MAAM,uBAAuB,CAAC,uBAAuB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEvE,IAAG,MAAM,EAAE;gBAAE,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;aAAE;QAC3C,CAAC;KAAA;IAED,MAAM,CAAO,uBAAuB,CAAC,QAA6B,EAAE,KAA8B;;;YAC9F,IAAI;gBACA,MAAM,QAAQ,CAAC,iBAAiB,CAC5B,cAAc,EACd;oBACI,eAAe,EAAE,MAAA,uBAAuB,CAAC,aAAa,0CAAE,mBAAmB,EAAE;oBAC7E,gBAAgB,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW;oBACpC,aAAa,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ;oBAC9B,eAAe,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU;oBAClC,aAAa,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM;iBAC/B,CACJ,CAAC;aACL;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;gBACvB,eAAe,CAAC,eAAe,EAAE,CAAC;aACrC;;KACJ;IAED,qCAAqC;IACrC,MAAM,CAAC,cAAc,CAAC,GAAW;QAC7B,MAAM,KAAK,GAA4B,uBAAuB,CAAC,mBAAmB,EAAE,CAAC;QAErF,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAChC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,EAAE,CAAC;IAClB,CAAC;IAED,qCAAqC;IACrC,MAAM,CAAC,kBAAkB,CAAC,QAA6B;QACnD,MAAM,MAAM,GAA6B,uBAAuB,CAAC,yBAAyB,EAAE,CAAC;QAC7F,MAAM,KAAK,GAA4B,uBAAuB,CAAC,mBAAmB,EAAE,CAAC;QACrF,MAAM,GAAG,GAAW,CAAC,CAAC,CAAC,oBAAoB;QAC3C,MAAM,kBAAkB,GAAW,GAAG,CAAC,CAAC,eAAe;QAEvD,IAAG,MAAM,EAAE;YAAE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;SAAE;QAEtC,IAAG,CAAC,uBAAuB,CAAC,sBAAsB,EAAE;YAChD,MAAM,KAAK,GAA4B,uBAAuB,CAAC,wBAAwB,EAAE,CAAC;YAE1F,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE;gBACnC,MAAM,KAAK,GAA4B,uBAAuB,CAAC,mBAAmB,EAAE,CAAC;gBAErF,IAAG,KAAK,EAAE;oBAAE,OAAO,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;oBAAC,KAAK,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAC,CAAC;iBAAE;YACtF,CAAC,CAAC,CAAC;YAEH,uBAAuB,CAAC,sBAAsB,GAAG,IAAI,CAAC;SACzD;QAED,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,GAAS,EAAE;YACxC,+DAA+D;YAC/D,IAAG,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAA,KAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,CAAA,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,IAAG,CAAC,EAAE;gBACxD,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAE5B,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC;aACtB;QACL,CAAC,CAAA,EAAE,kBAAkB,CAAC,CAAC;QAEvB,uBAAuB,CAAC,aAAa,GAAG,eAAe,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAM,CAAC,EAAC,EAAE;YAEvF,IAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,EAAE;gBACb,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;gBAEtB,MAAM,uBAAuB,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;gBAE/D,OAAO;aACV;YAED,MAAM,uBAAuB,CAAC,uBAAuB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC3E,CAAC,CAAA,CAAC,CAAC;QAEH,eAAe,CAAC,OAAO,EAAE,CAAC;QAE1B,IAAG,MAAM,EAAE;YAAE,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;SAAE;IAC3C,CAAC;IAED,MAAM,CAAO,sBAAsB,CAAC,QAA6B;;;YAC7D,MAAM,MAAM,GAA6B,uBAAuB,CAAC,yBAAyB,EAAE,CAAC;YAC7F,MAAM,KAAK,GAA4B,uBAAuB,CAAC,mBAAmB,EAAE,CAAC;YAErF,IAAG,MAAM,EAAE;gBAAE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;aAAE;YACtC,IAAG,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,GAAG,CAAC,EAAE;gBAAE,KAAK,CAAC,KAAK,EAAE,CAAC;aAAE;YAErE,MAAM,uBAAuB,CAAC,uBAAuB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEvE,eAAe,CAAC,eAAe,CAAC,MAAA,MAAA,uBAAuB,CAAC,aAAa,0CAAE,EAAE,mCAAI,SAAS,CAAC,CAAC;YAExF,IAAG,MAAM,EAAE;gBAAE,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;aAAE;;KAC1C;;AAlHM,8CAAsB,GAAG,KAAK,CAAC;AAc/B,qCAAa,GAA2B,IAAI,CAAC","sourcesContent":["import { WindowAnimation } from 'songhay';\n\nexport class ProgressiveAudioUtility {\n    static isInputEventingApplied = false;\n\n    static getHTMLAudioElement(): HTMLAudioElement | null {\n        return window.document.querySelector('#audio-player-container>audio');\n    }\n\n    static getPlayPauseButtonElement(): HTMLButtonElement | null {\n        return window.document.querySelector('#play-pause-block>button');\n    }\n\n    static getPlayPauseInputElement(): HTMLInputElement | null {\n        return window.document.querySelector('#play-pause-block>input');\n    }\n\n    static playAnimation: WindowAnimation | null = null;\n\n    // noinspection JSUnusedGlobalSymbols\n    static async handleAudioMetadataLoadedAsync(instance: DotNet.DotNetObject) : Promise<void> {\n        const button: HTMLButtonElement | null = ProgressiveAudioUtility.getPlayPauseButtonElement();\n        const audio: HTMLAudioElement | null = ProgressiveAudioUtility.getHTMLAudioElement();\n\n        if(button) { button.disabled = true; }\n\n        await ProgressiveAudioUtility.invokeDotNetMethodAsync(instance, audio);\n\n        if(button) { button.disabled = false; }\n    }\n\n    static async invokeDotNetMethodAsync(instance: DotNet.DotNetObject, audio: HTMLAudioElement | null) : Promise<void> {\n        try {\n            await instance.invokeMethodAsync(\n                'animateAsync',\n                {\n                    animationStatus: ProgressiveAudioUtility.playAnimation?.getDiagnosticStatus(),\n                    audioCurrentTime: audio?.currentTime,\n                    audioDuration: audio?.duration,\n                    audioReadyState: audio?.readyState,\n                    isAudioPaused: audio?.paused\n                }\n            );\n        } catch (error) {\n            console.error({error});\n            WindowAnimation.cancelAnimation();\n        }\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    static loadAudioTrack(src: string) : void {\n        const audio: HTMLAudioElement | null = ProgressiveAudioUtility.getHTMLAudioElement();\n\n        audio?.setAttribute('src', src);\n        audio?.load();\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    static startPlayAnimation(instance: DotNet.DotNetObject) : void {\n        const button: HTMLButtonElement | null = ProgressiveAudioUtility.getPlayPauseButtonElement();\n        const audio: HTMLAudioElement | null = ProgressiveAudioUtility.getHTMLAudioElement();\n        const fps: number = 1; // frames per second\n        const readyStatePollFreq: number = 250; // milliseconds\n\n        if(button) { button.disabled = true; }\n\n        if(!ProgressiveAudioUtility.isInputEventingApplied) {\n            const input: HTMLInputElement | null = ProgressiveAudioUtility.getPlayPauseInputElement();\n\n            input?.addEventListener('change', () => {\n                const audio: HTMLAudioElement | null = ProgressiveAudioUtility.getHTMLAudioElement();\n\n                if(audio) { console.warn({input}); audio.currentTime = parseFloat(input?.value); }\n            });\n\n            ProgressiveAudioUtility.isInputEventingApplied = true;\n        }\n\n        const timeId = window.setTimeout(async () => {\n            // poll faster than animation ticks until `readyState` changes:\n            if(!audio?.ended && audio?.paused && audio?.readyState > 0) {\n                window.clearTimeout(timeId);\n\n                await audio.play();\n            }\n        }, readyStatePollFreq);\n\n        ProgressiveAudioUtility.playAnimation = WindowAnimation.registerAndGenerate(fps, async _ => {\n\n            if(audio?.ended) {\n                audio.currentTime = 0;\n\n                await ProgressiveAudioUtility.stopPlayAnimationAsync(instance);\n\n                return;\n            }\n\n            await ProgressiveAudioUtility.invokeDotNetMethodAsync(instance, audio);\n        });\n\n        WindowAnimation.animate();\n\n        if(button) { button.disabled = false; }\n    }\n\n    static async stopPlayAnimationAsync(instance: DotNet.DotNetObject): Promise<void> {\n        const button: HTMLButtonElement | null = ProgressiveAudioUtility.getPlayPauseButtonElement();\n        const audio: HTMLAudioElement | null = ProgressiveAudioUtility.getHTMLAudioElement();\n\n        if(button) { button.disabled = true; }\n        if(audio && !audio.paused && audio.readyState > 0) { audio.pause(); }\n\n        await ProgressiveAudioUtility.invokeDotNetMethodAsync(instance, audio);\n\n        WindowAnimation.cancelAnimation(ProgressiveAudioUtility.playAnimation?.id ?? undefined);\n\n        if(button) { button.disabled = false; }\n    }\n}\n"]}