{"version":3,"file":"progressive-audio-utility.js","sourceRoot":"","sources":["../progressive-audio-utility.ts"],"names":[],"mappings":"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","sourcesContent":["import { WindowAnimation } from 'songhay';\n\nexport class ProgressiveAudioUtility {\n\n    static playAnimation: WindowAnimation | null = null;\n\n    // noinspection JSUnusedGlobalSymbols\n    static async handleAudioMetadataLoadedAsync(instance: DotNet.DotNetObject, button: HTMLButtonElement | null, audio: HTMLAudioElement | null) : Promise<void> {\n        ProgressiveAudioUtility.toggleElementEnabled(button);\n\n        await ProgressiveAudioUtility.invokeDotNetMethodAsync(instance, audio);\n\n        ProgressiveAudioUtility.toggleElementEnabled(button);\n    }\n\n    static async invokeDotNetMethodAsync(instance: DotNet.DotNetObject, audio: HTMLAudioElement | null) : Promise<void> {\n        let data : {} | null = null;\n\n        try {\n            data = {\n                animationStatus: ProgressiveAudioUtility.playAnimation?.getDiagnosticStatus(),\n                audioCurrentTime: audio?.currentTime,\n                audioDuration: audio?.duration,\n                audioReadyState: audio?.readyState,\n                isAudioPaused: audio?.paused\n            };\n\n            await instance?.invokeMethodAsync(\n                'animateAsync',\n                data\n            );\n        } catch (error) {\n            console.error({ error, instance, data });\n            WindowAnimation.cancelAnimation();\n        }\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    static loadAudioTrack(audio: HTMLAudioElement | null, src: string) : void {\n        audio?.setAttribute('src', src);\n        audio?.load();\n    }\n\n    static setAudioCurrentTime(input: HTMLInputElement | null, audio: HTMLAudioElement | null) : void {\n        if(audio && input) { audio.currentTime = parseFloat(input.value); }\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    static startPlayAnimation(instance: DotNet.DotNetObject, button: HTMLButtonElement | null, audio: HTMLAudioElement | null) : void {\n        const fps: number = 1; // frames per second\n        const readyStatePollFreq: number = 250; // milliseconds\n\n        ProgressiveAudioUtility.toggleElementEnabled(button);\n\n        const timeId = window.setTimeout(async () => {\n            // poll faster than animation ticks until `readyState` changes:\n            if(!audio?.ended && audio?.paused && audio?.readyState > 0) {\n                window.clearTimeout(timeId);\n\n                await audio.play();\n            }\n        }, readyStatePollFreq);\n\n        ProgressiveAudioUtility.playAnimation = WindowAnimation.registerAndGenerate(fps, async _ => {\n\n            if(audio?.ended) {\n                audio.currentTime = 0;\n\n                await ProgressiveAudioUtility.stopPlayAnimationAsync(instance, button, audio);\n\n                return;\n            }\n\n            await ProgressiveAudioUtility.invokeDotNetMethodAsync(instance, audio);\n        });\n\n        WindowAnimation.animate();\n\n        ProgressiveAudioUtility.toggleElementEnabled(button);\n    }\n\n    static async stopPlayAnimationAsync(instance: DotNet.DotNetObject, button: HTMLButtonElement | null, audio: HTMLAudioElement | null): Promise<void> {\n\n        ProgressiveAudioUtility.toggleElementEnabled(button);\n\n        if(audio && !audio.paused && audio.readyState > 0) { audio.pause(); }\n\n        await ProgressiveAudioUtility.invokeDotNetMethodAsync(instance, audio);\n\n        WindowAnimation.cancelAnimation(ProgressiveAudioUtility.playAnimation?.id ?? undefined);\n\n        ProgressiveAudioUtility.toggleElementEnabled(button);\n    }\n\n    static toggleElementEnabled(element: HTMLElement | null): void {\n        if (!element) { return; }\n\n        element.toggleAttribute('disabled');\n    }\n}\n"]}